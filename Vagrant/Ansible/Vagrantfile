# -*- mode: ruby -*-
# vi: set ft=ruby :

# Vagrantfile API/syntax version. Don't touch unless you know what you're doing!
VAGRANTFILE_API_VERSION = "2"

# INSTALL PLUGIN RELLOAD
unless Vagrant.has_plugin?("vagrant-reload")
  puts 'Installing vagrant-reload Plugin...'
  system('vagrant plugin install vagrant-reload')
end

Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|
  config.vm.box = "debian/bullseye64"

  # VM ubuntu-server
  config.vm.define "debian_ansible_awx"  do |debian_ansible_awx|

    # VARIABLE HOSTNAME
    APP_NAME= "debian-ansible-awx"

    # HOSTNAME
    debian_ansible_awx.vm.hostname = APP_NAME

    # NETWORK
    debian_ansible_awx.vm.network "public_network" ,ip: "192.168.0.133",mode: "bridge" ,bridge: [
    "ens32",
    "Marvell AQtion 5Gbit Network Adapter"
    ]

    #debian_ansible_awx.vm.network "private_network" ,ip: "192.168.79.133"

    # MOUNTS
    debian_ansible_awx.vm.synced_folder ".", "/vagrant", disabled: true
    debian_ansible_awx.vm.synced_folder "./security", "/home/vagrant/security"
    debian_ansible_awx.vm.synced_folder "./configs", "/home/vagrant/configs"

    # PROVIDER
    debian_ansible_awx.vm.provider "virtualbox" do |vb|
      vb.linked_clone = true
      vb.name = APP_NAME
      vb.memory = 8192
      vb.cpus = 4
    end

    # PROVISION
    debian_ansible_awx.vm.provision "shell", path: "scripts/install.sh"

    # ANSIBLE PROVISIONING
    # ol8_lpic_ansible.vm.provision "ansible" do |ansible|
    #   ansible.limit = "all"
    #   ansible.inventory_path = "provisioning/hosts"
    #   ansible.playbook = "provisioning/app.yml"
    # end

  end

end
